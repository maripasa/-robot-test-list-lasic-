<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0 (Python 3.11.4 on win32)" generated="2024-02-01T18:02:02.224964" rpa="false" schemaversion="5">
<suite id="s1" name="Robot-Test-List-Lasic" source="C:\Users\asafe\projects\robot-test-list-lasic">
<suite id="s1-s1" name="Tests" source="C:\Users\asafe\projects\robot-test-list-lasic\tests">
<suite id="s1-s1-s1" name="Serverest" source="C:\Users\asafe\projects\robot-test-list-lasic\tests\Serverest">
<suite id="s1-s1-s1-s1" name="Get Serverest" source="C:\Users\asafe\projects\robot-test-list-lasic\tests\Serverest\get_serverest.robot">
<test id="s1-s1-s1-s1-t1" name="TC01 - Realizar requisições GET" line="41">
<kw name="Criar Sessão">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-02-01T18:02:02.463844" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=serverest</arg>
<arg>url=${HOST}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-02-01T18:02:02.463844" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-02-01T18:02:02.461842" elapsed="0.002998"/>
</kw>
<kw name="Pegar os usuários">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-02-01T18:02:03.062027" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-02-01T18:02:03.062027" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '26795d5624cad43fd8689d7f5ac965d1', 'Date': 'Thu, 01 Feb 2024 21:01:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '27550'} 
 body={
    "quantidade": 123,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "wacyxkbiteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "0E3ri5ZKLlPQ52g1"
        },
        {
            "nome": "Fabiano Melo",
            "email": "Pedro.Melo@hotmail.com",
            "password": "t6YPTqPWQBgdP9w",
            "administrador": "true",
            "_id": "0kROoRBVp1DQPJjG"
        },
        {
            "nome": "Fulano da Silva",
            "email": "uruknwosteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "17Cyve8UCcfqRiWb"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ntbihnmqteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "1942EtoeEdF0oHdE"
        },
        {
            "nome": "Fulano da Silva",
            "email": "vdvdztbsteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "1eKdNd3rAVKGVxeg"
        },
        {
            "nome": "nome ${Math.random()}",
            "email": "email_1706813761219_qxiif9@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1zFHCuwNcilXZfn7"
        },
        {
            "nome": "Marcelo",
            "email": "Jordan.Dach82@hotmail.com",
            "password": "VT7_ICD6BGWxc9A",
            "administrador": "true",
            "_id": "24yvbV4vMmSIOFmT"
        },
        {
            "nome": "Teste",
            "email": "teste2@gmail.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "2Jz7SdbYK1HZYYUJ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "gkmmnktqteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "2ck2yURTe1PcIEk7"
        },
        {
            "nome": "nome ${Math.random()}",
            "email": "email_1706806399564_acied@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "2dlBRhTUIfL48rEZ"
        },
        {
            "nome": "Fulano Beltrano Teste",
            "email": "007teste.qa@test.com",
            "password": "Test@123",
            "administrador": "true",
            "_id": "2vZ5CjzChx6Sbm8P"
        },
        {
            "nome": "Fulano da Silva",
            "email": "zdpnrzodteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "2vdeEh17lu9ZicDx"
        },
        {
            "nome": "automation.77210081",
            "email": "automation.77210081@automation.com",
            "password": "12345678",
            "administrador": "false",
            "_id": "34S0sXhs6Z50p0wL"
        },
        {
            "nome": "automation.8513",
            "email": "automation.8513@automation.com",
            "password": "1234",
            "administrador": "true",
            "_id": "4IQqWrYmc6QqLUjj"
        },
        {
            "nome": "automation.6026",
            "email": "automation.6026@automation.com",
            "password": "1234",
            "administrador": "true",
            "_id": "4cuDkh144FsPvQnV"
        },
        {
            "nome": "Teste",
            "email": "teste1@gmail.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "4n9Lcl08n3lZGMAn"
        },
        {
            "nome": "nome 0.17471403664042873",
            "email": "email_1706814733101_o4t7eh@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "5aayZpnVijhblJfz"
        },
        {
            "nome": "nome ${Math.random()}",
            "email": "email_1706814036352_48oklo@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "5wM8NlOygmYdqQY6"
        },
        {
            "nome": "Keenan",
            "email": "Rico67@hotmail.com",
            "password": "VJc61rGCqygyR0r",
            "administrador": "true",
            "_id": "6FpPfp3Q7cKEBPK1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "knoghkxwteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "6YRO0QRNdTkuXI2P"
        },
        {
            "nome": "nome 0.17471403664042873",
            "email": "email_1706814555822_dlctva@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "76aJD1HT0vDT9CmP"
        },
        {
            "nome": "Brandyn",
            "email": "Braxton75@hotmail.com",
            "password": "M5JI8yDrAIZFSeV",
            "administrador": "true",
            "_id": "7MOYs2t8HfFSy6DH"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ulxhweqgteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "7ZUktnZrWtmGFsrx"
        },
        {
            "nome": "{{randomName}}",
            "email": "email_1706816074344_8pmjan@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "9vMHz0M4VANNIe6n"
        },
        {
            "nome": "Cesar",
            "email": "cesar4@exemplo.com.br",
            "password": "Teste123",
            "administrador": "false",
            "_id": "AeowonHrDUNZPqlo"
        },
        {
            "nome": "nome 0.17471403664042873",
            "email": "email_1706814625988_w971xl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "Atnw1Ej4JfpH9hkk"
        },
        {
            "nome": "nome ${Math.random()}",
            "email": "email_1706813205979_tkzg36@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "BLsd1cS9ghvNO4UF"
        },
        {
            "nome": "{{randomName}}",
            "email": "email_1706816059435_x3iu3@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "BXh66QfHjlQD7MA2"
        },
        {
            "nome": "{{randomName}}",
            "email": "email_1706818366584_j7um2n@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "D0nUPCX09VDqAoCC"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano1706791236886@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "D60VL9gqBWYb9x7s"
        },
        {
            "nome": "Fulano da Silva",
            "email": "tpewbddgteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "Dxav9ZQME6W9Xuzh"
        },
        {
            "nome": "Cesar",
            "email": "cesar2@exemplo.com.br",
            "password": "Teste123",
            "administrador": "false",
            "_id": "F5QOGxcrk3PfjjjG"
        },
        {
            "nome": "Fulano da Silva",
            "email": "hubvrodwteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "Frb1IrSqVUn5tqII"
        },
        {
            "nome": "{{randomName}}",
            "email": "email_1706816340415_8ofyo1@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "GkzQAYw2HuUmVP9k"
        },
        {
            "nome": "{{randomName}}",
            "email": "email_1706816066576_fgk3rk@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "HwHEtAMb7KRLEUcG"
        },
        {
            "nome": "Fulano da Silva",
            "email": "wciqkffateste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "J4GeEv9q3ua4E4U6"
        },
        {
            "nome": "automation.0077",
            "email": "automation.0077@automation.com",
            "password": "1234",
            "administrador": "true",
            "_id": "JZKx6melJo4Lfwz6"
        },
        {
            "nome": "Fulano da Silva",
            "email": "qdzyfxjvteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "JssyWaKfl5XagxXW"
        },
        {
            "nome": "User Dani",
            "email": "userdani@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "KxC7GnQZJHGnYzgG"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ghghytioteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "LWqNOrOY1a7XNLBl"
        },
        {
            "nome": "{{randomName}}",
            "email": "email_1706819170760_yszaap@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "Lkp0BaPuaYQnlSx7"
        },
        {
            "nome": "nome 0.17471403664042873",
            "email": "email_1706814594195_eqxyx@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "Ll9n9qLZ3oMfMxLc"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fvonsqnlteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "NIfJ6T2G7tijV8WH"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ypipcrwmteste@email.teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "NJhaKyUFDVeUXl74"
        },
        {
            "nome": "Dumb Joe",
            "email": "dum... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2024-02-01T18:02:03.063025" level="INFO">C:\Users\asafe\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<arg>alias=serverest</arg>
<arg>url=${USUARIOS}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-02-01T18:02:02.467846" elapsed="0.599184"/>
</kw>
<status status="PASS" start="2024-02-01T18:02:02.467846" elapsed="0.599184"/>
</kw>
<kw name="Pegar único usuário por id 0E3ri5ZKLlPQ52g1" source_name="Pegar único usuário por id ${id}">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-02-01T18:02:03.293693" level="INFO">GET Request : url=https://serverest.dev/usuarios/0E3ri5ZKLlPQ52g1 
 path_url=/usuarios/0E3ri5ZKLlPQ52g1 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-02-01T18:02:03.294208" level="INFO">GET Response : url=https://serverest.dev/usuarios/0E3ri5ZKLlPQ52g1 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ad49a4d65e9fe4308d31a40228e39e7b', 'Date': 'Thu, 01 Feb 2024 21:01:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '166'} 
 body={
    "nome": "Fulano da Silva",
    "email": "wacyxkbiteste@email.teste.com.br",
    "password": "1234",
    "administrador": "true",
    "_id": "0E3ri5ZKLlPQ52g1"
} 
 </msg>
<msg time="2024-02-01T18:02:03.295222" level="INFO">C:\Users\asafe\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<arg>alias=serverest</arg>
<arg>url=${USUARIOS}/${id}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-02-01T18:02:03.068031" elapsed="0.228192"/>
</kw>
<status status="PASS" start="2024-02-01T18:02:03.068031" elapsed="0.228192"/>
</kw>
<kw name="Pegar os produtos">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-02-01T18:02:03.507893" level="INFO">GET Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-02-01T18:02:03.509407" level="INFO">GET Response : url=https://serverest.dev/produtos 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '575f1f39c3d350d6f8b31b43317c0ccf', 'Date': 'Thu, 01 Feb 2024 21:01:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '5889'} 
 body={
    "quantidade": 29,
    "produtos": [
        {
            "nome": "Notebook Maloka",
            "preco": 3000,
            "descricao": "Notebook",
            "quantidade": 181,
            "_id": "0TuGe0O5vNk8rRkv"
        },
        {
            "nome": "Poco F5 GT",
            "preco": 2500,
            "descricao": "Celular",
            "quantidade": 125,
            "_id": "1ywOeNvfAz9weQRY"
        },
        {
            "nome": "PlayStation 5",
            "preco": 4500,
            "descricao": "Celular",
            "quantidade": 200,
            "_id": "2m5sfIxjYSpGoMoM"
        },
        {
            "nome": "Mouse gamer 3",
            "preco": 70,
            "descricao": "Eletrônicos PC",
            "quantidade": 100,
            "_id": "6YFdo7PvjW5HWjQf"
        },
        {
            "nome": "Product_9uhfzo",
            "preco": 470,
            "descricao": "Notebook",
            "quantidade": 100,
            "_id": "7KmwHCKvrLR02HWr"
        },
        {
            "nome": "Notebook dell",
            "preco": 470,
            "descricao": "Notebook",
            "quantidade": 100,
            "_id": "8PAMXXaGESNv8cps"
        },
        {
            "nome": "Logitech MX Vertical",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 382,
            "_id": "BeeJh5lz3k6kSIzA"
        },
        {
            "nome": "Product_ayjyh",
            "preco": 470,
            "descricao": "Notebook",
            "quantidade": 100,
            "_id": "F4ZGKtJGjQY4nJOs"
        },
        {
            "nome": "Synergistic Aluminum Shirt",
            "preco": 3000,
            "descricao": "teste de produto",
            "quantidade": 1,
            "_id": "Gov9VJPontyYC7QU"
        },
        {
            "nome": "Poco F6 GT",
            "preco": 2500,
            "descricao": "Celular",
            "quantidade": 130,
            "_id": "HUoDkJ6w02j4gowd"
        },
        {
            "nome": "Product_rg15af",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 381,
            "_id": "IBGk96854GK2t86C"
        },
        {
            "nome": "Notebook azus",
            "preco": 470,
            "descricao": "Notebook",
            "quantidade": 100,
            "_id": "Ij09xq4592djpfud"
        },
        {
            "nome": "Product_fpae7",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 381,
            "_id": "JZ1C0JuAQaYUbD5m"
        },
        {
            "nome": "Samsung 60 polegadas",
            "preco": 5240,
            "descricao": "TV",
            "quantidade": 49977,
            "_id": "K6leHdftCeOJj8BJ"
        },
        {
            "nome": "Product_x5e5pc",
            "preco": 470,
            "descricao": "Notebook",
            "quantidade": 100,
            "_id": "LuT0tcLekFlHRB7y"
        },
        {
            "nome": "Product ${Math.random()}",
            "preco": 3000,
            "descricao": "Notebook",
            "quantidade": 181,
            "_id": "NTlmv0Q5uO9ORGhy"
        },
        {
            "nome": "Product_nddx1e",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 381,
            "_id": "RD288DhLivWMNPZH"
        },
        {
            "nome": "Product_p2v5hr",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 381,
            "_id": "RJsN1iaMAQ39woEQ"
        },
        {
            "nome": "Modern Wooden Bacon",
            "preco": 500,
            "descricao": "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
            "quantidade": 10,
            "_id": "Skyfa9To9jZr5FLQ"
        },
        {
            "nome": "Generic Plastic Salad",
            "preco": 500,
            "descricao": "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A &amp; J 2016",
            "quantidade": 0,
            "_id": "ZjP7PtWxFUK34WfK"
        },
        {
            "nome": "Product_bithi",
            "preco": 470,
            "descricao": "Notebook",
            "quantidade": 100,
            "_id": "bMc7P0prPQSh7tbA"
        },
        {
            "nome": "Notebook samsung",
            "preco": 470,
            "descricao": "Notebook",
            "quantidade": 100,
            "_id": "cfCBdtcLZOTYz2KK"
        },
        {
            "nome": "randomProduct",
            "preco": 470,
            "descricao": "Notebook",
            "quantidade": 100,
            "_id": "cuWFXk9FVaQdY5EV"
        },
        {
            "nome": "Product_y0tbxi",
            "preco": 470,
            "descricao": "Notebook",
            "quantidade": 100,
            "_id": "kGFsHkb1VTAe7z15"
        },
        {
            "nome": "Product_ovfp6",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 381,
            "_id": "pmMzC8UDHQ4a39W8"
        },
        {
            "nome": "Product_nb891l",
            "preco": 470,
            "descricao": "Notebook",
            "quantidade": 100,
            "_id": "rVTyRBTVZwElKIoh"
        },
        {
            "nome": "Product_ldpm9",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 381,
            "_id": "vXZAuWJ8wl5dA0sD"
        },
        {
            "nome": "Fantastic Leather Hat",
            "preco": 3000,
            "descricao": "teste de produto",
            "quantidade": 1,
            "_id": "xCRueSxxprSEwLhX"
        },
        {
            "nome": "Logitech teste 01 ggg e Ullrich and Sons",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 380,
            "_id": "xJyGJaEvcjcZSvyA"
        }
    ]
} 
 </msg>
<msg time="2024-02-01T18:02:03.509407" level="INFO">C:\Users\asafe\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<arg>alias=serverest</arg>
<arg>url=${PRODUTOS}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-02-01T18:02:03.297220" elapsed="0.215227"/>
</kw>
<status status="PASS" start="2024-02-01T18:02:03.297220" elapsed="0.216224"/>
</kw>
<kw name="Pegar único produto por id BeeJh5lz3k6kSIzA" source_name="Pegar único produto por id ${id}">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-02-01T18:02:03.716412" level="INFO">GET Request : url=https://serverest.dev/produtos/BeeJh5lz3k6kSIzA 
 path_url=/produtos/BeeJh5lz3k6kSIzA 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-02-01T18:02:03.717413" level="INFO">GET Response : url=https://serverest.dev/produtos/BeeJh5lz3k6kSIzA 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9e74b99bc08cb15b6f523e3357e46ed0', 'Date': 'Thu, 01 Feb 2024 21:01:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '136'} 
 body={
    "nome": "Logitech MX Vertical",
    "preco": 470,
    "descricao": "Mouse",
    "quantidade": 382,
    "_id": "BeeJh5lz3k6kSIzA"
} 
 </msg>
<msg time="2024-02-01T18:02:03.718415" level="INFO">C:\Users\asafe\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<arg>alias=serverest</arg>
<arg>url=${PRODUTOS}/${id}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-02-01T18:02:03.514442" elapsed="0.204971"/>
</kw>
<status status="PASS" start="2024-02-01T18:02:03.513444" elapsed="0.206483"/>
</kw>
<kw name="Pegar os carrinhos">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-02-01T18:02:03.924788" level="INFO">GET Request : url=https://serverest.dev/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-02-01T18:02:03.925788" level="INFO">GET Response : url=https://serverest.dev/carrinhos 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fed3739f8367d1a0be2f08b4b4f4c171', 'Date': 'Thu, 01 Feb 2024 21:01:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '972'} 
 body={
    "quantidade": 2,
    "carrinhos": [
        {
            "produtos": [
                {
                    "idProduto": "BeeJh5lz3k6kSIzA",
                    "quantidade": 2,
                    "precoUnitario": 470
                },
                {
                    "idProduto": "K6leHdftCeOJj8BJ",
                    "quantidade": 1,
                    "precoUnitario": 5240
                }
            ],
            "precoTotal": 6180,
            "quantidadeTotal": 3,
            "idUsuario": "oUb7aGkMtSEPf6BZ",
            "_id": "qbMqntef4iTOwWfg"
        },
        {
            "produtos": [
                {
                    "idProduto": "xJyGJaEvcjcZSvyA",
                    "quantidade": 1,
                    "precoUnitario": 470
                }
            ],
            "precoTotal": 470,
            "quantidadeTotal": 1,
            "idUsuario": "iK3vhV7QFA8eQs8o",
            "_id": "zk1hZvs1DoP1gjJ2"
        }
    ]
} 
 </msg>
<msg time="2024-02-01T18:02:03.925788" level="INFO">C:\Users\asafe\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<arg>alias=serverest</arg>
<arg>url=${CARRINHOS}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-02-01T18:02:03.720937" elapsed="0.206858"/>
</kw>
<status status="PASS" start="2024-02-01T18:02:03.719927" elapsed="0.207868"/>
</kw>
<kw name="Pegar único carrinho por id qbMqntef4iTOwWfg" source_name="Pegar único carrinho por id ${id}">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-02-01T18:02:04.146049" level="INFO">GET Request : url=https://serverest.dev/carrinhos/qbMqntef4iTOwWfg 
 path_url=/carrinhos/qbMqntef4iTOwWfg 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-02-01T18:02:04.147052" level="INFO">GET Response : url=https://serverest.dev/carrinhos/qbMqntef4iTOwWfg 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5f346f387408acf3b0745120f49b03d2', 'Date': 'Thu, 01 Feb 2024 21:01:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '401'} 
 body={
    "produtos": [
        {
            "idProduto": "BeeJh5lz3k6kSIzA",
            "quantidade": 2,
            "precoUnitario": 470
        },
        {
            "idProduto": "K6leHdftCeOJj8BJ",
            "quantidade": 1,
            "precoUnitario": 5240
        }
    ],
    "precoTotal": 6180,
    "quantidadeTotal": 3,
    "idUsuario": "oUb7aGkMtSEPf6BZ",
    "_id": "qbMqntef4iTOwWfg"
} 
 </msg>
<msg time="2024-02-01T18:02:04.147052" level="INFO">C:\Users\asafe\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<arg>alias=serverest</arg>
<arg>url=${CARRINHOS}/${id}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-02-01T18:02:03.930327" elapsed="0.217726"/>
</kw>
<status status="PASS" start="2024-02-01T18:02:03.929310" elapsed="0.219743"/>
</kw>
<kw name="Deletar Sessões">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-02-01T18:02:04.150584" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-02-01T18:02:04.150584" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T18:02:04.149565" elapsed="0.002034"/>
</kw>
<status status="PASS" start="2024-02-01T18:02:02.460844" elapsed="1.690755"/>
</test>
<status status="PASS" start="2024-02-01T18:02:02.280692" elapsed="1.873906"/>
</suite>
<status status="PASS" start="2024-02-01T18:02:02.276149" elapsed="1.880448"/>
</suite>
<status status="PASS" start="2024-02-01T18:02:02.272148" elapsed="1.885449"/>
</suite>
<status status="PASS" start="2024-02-01T18:02:02.231511" elapsed="1.929618"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Robot-Test-List-Lasic">Robot-Test-List-Lasic</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Tests">Robot-Test-List-Lasic.Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Serverest">Robot-Test-List-Lasic.Tests.Serverest</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s1" name="Get Serverest">Robot-Test-List-Lasic.Tests.Serverest.Get Serverest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
